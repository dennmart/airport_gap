version: 2

jobs:
  unit_tests:
    working_directory: ~/airport_gap
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          PGHOST: 127.0.0.1
          PGUSER: airport_gap
          RAILS_ENV: test
      - image: circleci/postgres:12.1-alpine
        environment:
          POSTGRES_USER: airport_gap
          POSTGRES_DB: airport_gap_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - restore_cache:
          name: Restore Cache (Bundler)
          keys:
            - airport-gap-bundler-unit-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install dependencies (Bundler)
          command: bundle install --path vendor/bundle

      - save_cache:
          name: Saving Cache (Bundler)
          key: airport-gap-bundler-unit-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          name: Restore Cache (Yarn)
          keys:
            - airport-gap-yarn-unit-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies (Yarn)
          command: yarn install --frozen-lockfile --prefer-offline --cache-folder ~/.cache/yarn

      - save_cache:
          name: Saving Cache (Yarn)
          key: airport-gap-yarn-unit-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Database setup
          command: bin/rails db:prepare

      - run:
          name: Run tests
          command: bin/rails spec

  end_to_end_tests:
    working_directory: ~/airport_gap
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          PGHOST: 127.0.0.1
          PGUSER: airport_gap
      - image: circleci/postgres:12.1-alpine
        environment:
          POSTGRES_USER: airport_gap
          POSTGRES_DB: airport_gap_development
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - restore_cache:
          name: Restore Cache (Bundler)
          keys:
            - airport-gap-bundler-e2e-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install dependencies (Bundler)
          command: bundle install --path vendor/bundle

      - save_cache:
          name: Saving Cache (Bundler)
          key: airport-gap-bundler-e2e-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          name: Restore Cache (Yarn)
          keys:
            - airport-gap-yarn-e2e-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies (Yarn)
          command: yarn install --frozen-lockfile --prefer-offline --cache-folder ~/.cache/yarn

      - save_cache:
          name: Saving Cache (Yarn)
          key: airport-gap-yarn-e2e-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Database setup
          command: bin/rails db:prepare

      - run:
          name: Seed the database
          command: bin/rails db:seed

      - run:
          name: Download APId binary
          command: |
            curl -o apid https://cdn.getapid.com/cli/latest/apid-latest-linux-amd64
            chmod u+x apid

      - run:
          name: Start application server
          command: bin/rails s -d

      - run:
          name: Wait for application
          command: dockerize -wait http://localhost:3000 -timeout 2m

      - run:
          name: Run end-to-end tests
          command: ./apid check

workflows:
  version: 2
  run_tests:
    jobs:
      - unit_tests
      - end_to_end_tests
